$date
    Nov 14, 2024  12:51:08
$end
$version
    TOOL:	xmsim(64)	22.09-s013
$end
$timescale
    1 ps
$end

$scope module vote_counter_tb $end
$var reg       3 !    in_word [2:0] $end
$var reg       4 "    out_result [3:0] $end

$scope module dut_counter $end
$var wire      1 #    input_word [2] $end
$var wire      1 $    input_word [1] $end
$var wire      1 %    input_word [0] $end
$var reg       4 &    out_result [3:0] $end
$var reg       1 '    mid_bit1_not_a_out $end
$var reg       1 (    mid_bit1_not_b_out $end
$var reg       1 )    mid_bit1_not_c_out $end
$var reg       1 *    mid_bit1_and0_out $end
$var reg       1 +    mid_bit1_and1_out $end
$var reg       1 ,    mid_bit1_and2_out $end
$var reg       1 -    mid_bit2_not_a_out $end
$var reg       1 .    mid_bit2_not_b_out $end
$var reg       1 /    mid_bit2_not_c_out $end
$var reg       1 0    mid_bit2_and0_out $end
$var reg       1 1    mid_bit2_and1_out $end
$var reg       1 2    mid_bit2_and2_out $end

$scope module out_0 $end
$var wire      1 3    Y  $end
$var wire      1 %    A  $end
$var wire      1 $    B  $end
$var wire      1 #    C  $end
$var wire      1 4    int_fwire_0  $end
$upscope $end


$scope module bit_1_mid_a $end
$var wire      1 5    Y  $end
$var wire      1 %    A  $end
$upscope $end


$scope module bit_1_mid_b $end
$var wire      1 6    Y  $end
$var wire      1 $    A  $end
$upscope $end


$scope module bit_1_mid_c $end
$var wire      1 7    Y  $end
$var wire      1 #    A  $end
$upscope $end


$scope module bit_1_and0 $end
$var wire      1 8    Y  $end
$var wire      1 %    A  $end
$var wire      1 9    B  $end
$var wire      1 :    C  $end
$upscope $end


$scope module bit_1_and1 $end
$var wire      1 ;    Y  $end
$var wire      1 <    A  $end
$var wire      1 =    B  $end
$var wire      1 #    C  $end
$upscope $end


$scope module bit_1_and2 $end
$var wire      1 >    Y  $end
$var wire      1 ?    A  $end
$var wire      1 $    B  $end
$var wire      1 @    C  $end
$upscope $end


$scope module bit_1_or $end
$var wire      1 A    Y  $end
$var wire      1 B    A  $end
$var wire      1 C    B  $end
$var wire      1 D    C  $end
$upscope $end


$scope module bit_2_mid_inv_a $end
$var wire      1 E    Y  $end
$var wire      1 %    A  $end
$upscope $end


$scope module bit_2_mid_inv_b $end
$var wire      1 F    Y  $end
$var wire      1 $    A  $end
$upscope $end


$scope module bit_2_mid_inv_c $end
$var wire      1 G    Y  $end
$var wire      1 #    A  $end
$upscope $end


$scope module bit_2_and0 $end
$var wire      1 H    Y  $end
$var wire      1 %    A  $end
$var wire      1 I    B  $end
$var wire      1 #    C  $end
$upscope $end


$scope module bit_2_and1 $end
$var wire      1 J    Y  $end
$var wire      1 K    A  $end
$var wire      1 $    B  $end
$var wire      1 #    C  $end
$upscope $end


$scope module bit_2_and2 $end
$var wire      1 L    Y  $end
$var wire      1 %    A  $end
$var wire      1 $    B  $end
$var wire      1 M    C  $end
$upscope $end


$scope module bit_2_or $end
$var wire      1 N    Y  $end
$var wire      1 O    A  $end
$var wire      1 P    B  $end
$var wire      1 Q    C  $end
$upscope $end


$scope module bit_3_and $end
$var wire      1 R    Y  $end
$var wire      1 %    A  $end
$var wire      1 $    B  $end
$var wire      1 #    C  $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
b0 !
b1 "
0#
0$
0%
b1 &
1'
1(
1)
0*
0+
0,
1-
1.
1/
00
01
02
13
04
15
16
17
08
19
1:
0;
1<
1=
0>
1?
1@
0A
0B
0C
0D
1E
1F
1G
0H
1I
0J
1K
0L
1M
0N
0O
0P
0Q
0R
$end
#5
b1 !
1%
14
03
0E
05
18
b0 &
0-
0'
1*
1B
0?
0<
0K
b0 "
1A
b10 &
b10 "
#10
b10 !
1$
0%
1E
15
08
0F
06
1-
1'
0*
0.
0(
0=
09
0I
0B
1?
1<
1K
1>
0A
1,
b0 &
1D
b0 "
1A
b10 &
b10 "
#15
b11 !
1%
0E
05
1L
0-
0'
12
1Q
0?
0<
0K
0>
1N
0,
b110 &
0D
b110 "
0A
b100 &
b100 "
#20
b100 !
1#
0$
0%
1E
15
1F
16
0L
0G
07
1-
1'
1.
1(
02
0/
0)
0@
0:
0M
0Q
1=
19
1I
1?
1<
1K
1;
0N
1+
b0 &
1C
b0 "
1A
b10 &
b10 "
#25
b101 !
1%
0E
05
1H
0-
0'
10
1O
0?
0<
0K
0;
1N
0+
b110 &
0C
b110 "
0A
b100 &
b100 "
#30
b110 !
1$
0%
1E
15
0H
0F
06
1-
1'
00
0.
0(
0=
09
0I
0O
1?
1<
1K
1J
0N
11
b0 &
1P
b0 "
1N
b100 &
b100 "
#35
b111 !
1%
0E
05
1R
0-
0'
b1100 &
0?
0<
0K
b1100 "
0J
01
0P
0N
b1000 &
b1000 "
#40
