xrun(64): 22.09-s013: (c) Copyright 1995-2023 Cadence Design Systems, Inc.
TOOL:	xrun(64)	22.09-s013: Started on Nov 29, 2024 at 17:43:53 -03
xrun
	-64bit
	register8_bank_tb.sv
	register8_bank_v2.sv
Recompiling... reason: file './register8_bank_tb.sv' is newer than expected.
	expected: Fri Nov 29 17:43:29 2024
	actual:   Fri Nov 29 17:43:49 2024
file: register8_bank_tb.sv
	module worklib.register8_bank_tb:sv
		errors: 0, warnings: 0
		Caching library 'worklib' ....... Done
	Elaborating the design hierarchy:
	Top level design units:
		register8_bank_tb
		Caching library 'worklib' ....... Done
xmelab: *W,DSEMEL: This SystemVerilog design will be simulated as per IEEE 1800-2009 SystemVerilog simulation semantics. Use -disable_sem2009 option for turning off SV 2009 simulation semantics.
	Building instance overlay tables: ....
        assert(rd1 == 8'h00 && rd2 == 8'h00) else $fatal("Test Case 0 failed");
                                                                            |
xmelab: *W,STRINT (./register8_bank_tb.sv,41|76): String literal argument supplied to integer parameter.
        assert(rd1 == 8'hAA && rd2 == 8'h00) else $fatal("Test Case 1 failed");
                                                                            |
xmelab: *W,STRINT (./register8_bank_tb.sv,62|76): String literal argument supplied to integer parameter.
        assert(rd1 == 8'hAA && rd2 == 8'hBB) else $fatal("Test Case 2 failed");
                                                                            |
xmelab: *W,STRINT (./register8_bank_tb.sv,73|76): String literal argument supplied to integer parameter.
        assert(rd1 == 8'hAA && rd2 == 8'hBB) else $fatal("Test Case 3 failed");
                                                                            |
xmelab: *W,STRINT (./register8_bank_tb.sv,81|76): String literal argument supplied to integer parameter.
        assert(rd1 == 8'hCC && rd2 == 8'hBB) else $fatal("Test Case 4 failed");
                                                                            |
xmelab: *W,STRINT (./register8_bank_tb.sv,91|76): String literal argument supplied to integer parameter.
        assert(rd1 == 8'hCC && rd2 == 8'hDD) else $fatal("Test Case 5 failed");
                                                                            |
xmelab: *W,STRINT (./register8_bank_tb.sv,101|76): String literal argument supplied to integer parameter.
        assert(rd1 == 8'hCC && rd2 == 8'hDD) else $fatal("Test Case 6 failed");
                                                                            |
xmelab: *W,STRINT (./register8_bank_tb.sv,110|76): String literal argument supplied to integer parameter.
        assert(rd1 == 8'hEE && rd2 == 8'hDD) else $fatal("Test Case 7 failed");
                                                                            |
xmelab: *W,STRINT (./register8_bank_tb.sv,120|76): String literal argument supplied to integer parameter.
        assert(rd1 == 8'hEE && rd2 == 8'hFF) else $fatal("Test Case 8 failed");
                                                                            |
xmelab: *W,STRINT (./register8_bank_tb.sv,130|76): String literal argument supplied to integer parameter.
        assert(rd1 == 8'h11 && rd2 == 8'hFF) else $fatal("Test Case 9 failed");
                                                                            |
xmelab: *W,STRINT (./register8_bank_tb.sv,140|76): String literal argument supplied to integer parameter.
        assert(rd1 == 8'hAA && rd2 == 8'hBB) else $fatal("Test Case 10 failed");
                                                                             |
xmelab: *W,STRINT (./register8_bank_tb.sv,155|77): String literal argument supplied to integer parameter.
        assert(rd1 == 8'hCC && rd2 == 8'hDD) else $fatal("Test Case 11 failed");
                                                                             |
xmelab: *W,STRINT (./register8_bank_tb.sv,162|77): String literal argument supplied to integer parameter.
        assert(rd1 == 8'hEE && rd2 == 8'hFF) else $fatal("Test Case 12 failed");
                                                                             |
xmelab: *W,STRINT (./register8_bank_tb.sv,169|77): String literal argument supplied to integer parameter.
        assert(rd1 == 8'h11 && rd2 == 8'h00) else $fatal("Test Case 13 failed");
                                                                             |
xmelab: *W,STRINT (./register8_bank_tb.sv,176|77): String literal argument supplied to integer parameter.
        assert(rd1 == 8'h00 && rd2 == 8'h00) else $fatal("Test Case 14 failed");
                                                                             |
xmelab: *W,STRINT (./register8_bank_tb.sv,197|77): String literal argument supplied to integer parameter.
        assert(rd1 == 8'h00 && rd2 == 8'h00) else $fatal("Test Case 15 failed");
                                                                             |
xmelab: *W,STRINT (./register8_bank_tb.sv,204|77): String literal argument supplied to integer parameter.
        assert(rd1 == 8'h00 && rd2 == 8'h00) else $fatal("Test Case 16 failed");
                                                                             |
xmelab: *W,STRINT (./register8_bank_tb.sv,211|77): String literal argument supplied to integer parameter.
        assert(rd1 == 8'h00 && rd2 == 8'h00) else $fatal("Test Case 17 failed");
                                                                             |
xmelab: *W,STRINT (./register8_bank_tb.sv,218|77): String literal argument supplied to integer parameter.
................ Done
	Generating native compiled code:
		worklib.register8_bank_tb:sv <0x69d87070>
			streams:  13, words: 53157
	Building instance specific data structures.
	Loading native compiled code:     .................... Done
	Design hierarchy summary:
		                 Instances  Unique
		Modules:                10       3
		Registers:              40      33
		Scalar wires:            3       -
		Vectored wires:         32       -
		Always blocks:          11       4
		Initial blocks:          3       3
		Pseudo assignments:     25      11
		Assertions:             18      18
		Simulation timescale:  1ps
	Writing initial simulation snapshot: worklib.register8_bank_tb:sv
Loading snapshot worklib.register8_bank_tb:sv .................... Done
xmsim: *W,DSEM2009: This SystemVerilog design is simulated as per IEEE 1800-2009 SystemVerilog simulation semantics. Use -disable_sem2009 option for turning off SV 2009 simulation semantics.
xcelium> source /home/tools/cadence/installs/XCELIUM2209/tools/xcelium/files/xmsimrc
xcelium> run
xmsim: *W,DVEXACC: some objects excluded from $dumpvars due to access restrictions, use +access+r on command line for access to all objects.
            File: ./register8_bank_tb.sv, line = 31, pos = 16
           Scope: register8_bank_tb
            Time: 0 FS + 0

                Tempo               Entradas LUT                                    SaÃ­das
                         clk  rst  we3   wa3   ra1    ra2        wd3                rd1         rd2
                ====   =================================================        =====================
                   5      1    x    x    xxx   xxx    xxx      xxxxxxxx         xxxxxxxx      xxxxxxxx
                  15      1    1    x    xxx   xxx    xxx      xxxxxxxx         xxxxxxxx      xxxxxxxx
                  25      1    1    x    xxx   xxx    xxx      xxxxxxxx         00000000      00000000
                  35      1    1    x    xxx   xxx    xxx      xxxxxxxx         00000000      00000000
                  45      1    1    1    001   001    xxx      10101010         00000000      00000000
xmsim: *F,ASRTST (./register8_bank_tb.sv,62): (time 55 NS) Assertion register8_bank_tb.__assert_2 has failed
Simulation terminated via $fatal(1) at time 55 NS + 0
./register8_bank_tb.sv:62         assert(rd1 == 8'hAA && rd2 == 8'h00) else $fatal("Test Case 1 failed");
xcelium> exit
TOOL:	xrun(64)	22.09-s013: Exiting on Nov 29, 2024 at 17:43:54 -03  (total: 00:00:01)
